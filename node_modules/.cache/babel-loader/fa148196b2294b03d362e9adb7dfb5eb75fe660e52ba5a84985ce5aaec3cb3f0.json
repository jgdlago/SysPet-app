{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080'\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = Cookies.get('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","Cookies","axiosInstance","create","baseURL","interceptors","request","use","config","token","get","headers","error","Promise","reject"],"sources":["/home/dallago/Documentos/GitHub/SysPet-app/src/configs/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080',\n});\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = Cookies.get('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGR,OAAO,CAACS,GAAG,CAAC,OAAO,CAAC;EAClC,IAAID,KAAK,EAAE;IACTD,MAAM,CAACG,OAAO,CAAC,eAAe,CAAC,GAAI,UAASF,KAAM,EAAC;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeV,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}