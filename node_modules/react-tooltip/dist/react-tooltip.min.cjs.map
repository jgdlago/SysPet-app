{"version":3,"file":"react-tooltip.min.cjs","sources":["../src/utils/handle-style.ts","../src/utils/debounce.ts","../src/components/TooltipProvider/TooltipProvider.tsx","../src/components/TooltipProvider/TooltipWrapper.tsx","../src/utils/use-isomorphic-layout-effect.ts","../src/utils/get-scroll-parent.ts","../src/utils/compute-positions.ts","../src/components/Tooltip/Tooltip.tsx","../src/components/TooltipContent/TooltipContent.tsx","../src/index.tsx","../src/components/TooltipController/TooltipController.tsx"],"sourcesContent":["// This is the ID for the core styles of ReactTooltip\nconst REACT_TOOLTIP_CORE_STYLES_ID = 'react-tooltip-core-styles'\n// This is the ID for the visual styles of ReactTooltip\nconst REACT_TOOLTIP_BASE_STYLES_ID = 'react-tooltip-base-styles'\n\nfunction injectStyle({\n  css,\n  id = REACT_TOOLTIP_BASE_STYLES_ID,\n  type = 'base',\n  ref,\n}: {\n  css: string\n  id?: string\n  type?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref?: any\n}) {\n  if (\n    type === 'core' &&\n    typeof process !== 'undefined' && // this validation prevents docs from breaking even with `process?`\n    (process?.env?.REACT_TOOLTIP_DISABLE_CORE_STYLES ||\n      process?.env?.REACT_APP_REACT_TOOLTIP_DISABLE_CORE_STYLES)\n  ) {\n    return\n  }\n\n  if (\n    type !== 'core' &&\n    typeof process !== 'undefined' && // this validation prevents docs from breaking even with `process?`\n    (process?.env?.REACT_TOOLTIP_DISABLE_BASE_STYLES ||\n      process?.env?.REACT_APP_REACT_TOOLTIP_DISABLE_BASE_STYLES)\n  ) {\n    return\n  }\n\n  if (type === 'core') {\n    // eslint-disable-next-line no-param-reassign\n    id = REACT_TOOLTIP_CORE_STYLES_ID\n  }\n\n  if (!ref) {\n    // eslint-disable-next-line no-param-reassign\n    ref = {}\n  }\n  const { insertAt } = ref\n\n  if (!css || typeof document === 'undefined' || document.getElementById(id)) {\n    return\n  }\n\n  const head = document.head || document.getElementsByTagName('head')[0]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const style: any = document.createElement('style')\n  style.id = id\n  style.type = 'text/css'\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild)\n    } else {\n      head.appendChild(style)\n    }\n  } else {\n    head.appendChild(style)\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css\n  } else {\n    style.appendChild(document.createTextNode(css))\n  }\n}\n\nfunction removeStyle({\n  type = 'base',\n  id = REACT_TOOLTIP_BASE_STYLES_ID,\n}: {\n  type?: string\n  id?: string\n} = {}) {\n  if (type === 'core') {\n    // eslint-disable-next-line no-param-reassign\n    id = REACT_TOOLTIP_CORE_STYLES_ID\n  }\n\n  const style = document.getElementById(id)\n  style?.remove()\n}\n\nexport { injectStyle, removeStyle }\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: true) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's not need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n}\n\nexport default debounce\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n","import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n","import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","const isScrollable = (node: Element) => {\n  if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n    return false\n  }\n  const style = getComputedStyle(node)\n  return ['overflow', 'overflow-x', 'overflow-y'].some((propertyName) => {\n    const value = style.getPropertyValue(propertyName)\n    return value === 'auto' || value === 'scroll'\n  })\n}\n\nexport const getScrollParent = (node: Element | null) => {\n  if (!node) {\n    return null\n  }\n  let currentParent = node.parentElement\n  while (currentParent) {\n    if (isScrollable(currentParent)) {\n      return currentParent\n    }\n    currentParent = currentParent.parentElement\n  }\n  return document.scrollingElement || document.documentElement\n}\n","import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n  border,\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px`, border }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const borderSide =\n        border &&\n        {\n          top: { borderBottom: border, borderRight: border },\n          right: { borderBottom: border, borderLeft: border },\n          bottom: { borderTop: border, borderLeft: border },\n          left: { borderTop: border, borderRight: border },\n        }[placement.split('-')[0]]\n\n      let borderWidth = 0\n      if (border) {\n        const match = `${border}`.match(/(\\d+)px/)\n        if (match?.[1]) {\n          borderWidth = Number(match[1])\n        } else {\n          /**\n           * this means `border` was set without `width`, or non-px value\n           */\n          borderWidth = 1\n        }\n      }\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        ...borderSide,\n        [staticSide]: `-${4 + borderWidth}px`,\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { getScrollParent } from 'utils/get-scroll-parent'\nimport { computeTooltipPosition } from 'utils/compute-positions'\nimport coreStyles from './core-styles.module.css'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n  border,\n  opacity,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n      border,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    const handleScrollResize = () => {\n      handleShow(false)\n    }\n\n    const anchorScrollParent = getScrollParent(activeAnchor)\n    const tooltipScrollParent = getScrollParent(tooltipRef.current)\n\n    if (closeOnScroll) {\n      window.addEventListener('scroll', handleScrollResize)\n      anchorScrollParent?.addEventListener('scroll', handleScrollResize)\n      tooltipScrollParent?.addEventListener('scroll', handleScrollResize)\n    }\n    if (closeOnResize) {\n      window.addEventListener('resize', handleScrollResize)\n    }\n\n    const handleEsc = (event: KeyboardEvent) => {\n      if (event.key !== 'Escape') {\n        return\n      }\n      handleShow(false)\n    }\n\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (closeOnScroll) {\n        window.removeEventListener('scroll', handleScrollResize)\n        anchorScrollParent?.removeEventListener('scroll', handleScrollResize)\n        tooltipScrollParent?.removeEventListener('scroll', handleScrollResize)\n      }\n      if (closeOnResize) {\n        window.removeEventListener('resize', handleScrollResize)\n      }\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [rendered, anchorRefs, anchorsBySelect, closeOnEsc, events])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              if (tooltipShowDelayTimerRef.current) {\n                clearTimeout(tooltipShowDelayTimerRef.current)\n              }\n              if (tooltipHideDelayTimerRef.current) {\n                clearTimeout(tooltipHideDelayTimerRef.current)\n              }\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  const updateTooltipPosition = () => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n      border,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [show, activeAnchor, content, externalStyles, place, offset, positionStrategy, position])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = !hidden && content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        coreStyles['tooltip'],\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          [coreStyles['show']]: canShow,\n          [coreStyles['fixed']]: positionStrategy === 'fixed',\n          [coreStyles['clickable']]: clickable,\n        },\n      )}\n      style={{\n        ...externalStyles,\n        ...inlineStyles,\n        opacity: opacity !== undefined && canShow ? opacity : undefined,\n      }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames(\n          'react-tooltip-arrow',\n          coreStyles['arrow'],\n          styles['arrow'],\n          classNameArrow,\n          {\n            /**\n             * changed from dash `no-arrow` to camelcase because of:\n             * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n             */\n            [coreStyles['noArrow']]: noArrow,\n          },\n        )}\n        style={inlineArrowStyles}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n","import './tokens.css'\n\nimport { injectStyle } from 'utils/handle-style'\n\nimport type {\n  ChildrenType,\n  DataAttribute,\n  EventsType,\n  PlacesType,\n  PositionStrategy,\n  VariantType,\n  WrapperType,\n  IPosition,\n  Middleware,\n} from './components/Tooltip/TooltipTypes'\nimport type { ITooltipController } from './components/TooltipController/TooltipControllerTypes'\nimport type { ITooltipWrapper } from './components/TooltipProvider/TooltipProviderTypes'\n\n// those content will be replaced in build time with the `react-tooltip.css` builded content\nconst TooltipCoreStyles = 'react-tooltip-core-css-placeholder'\nconst TooltipStyles = 'react-tooltip-css-placeholder'\n\ninjectStyle({ css: TooltipCoreStyles, type: 'core' })\ninjectStyle({ css: TooltipStyles })\n\nexport { TooltipController as Tooltip } from './components/TooltipController'\nexport { TooltipProvider, TooltipWrapper } from './components/TooltipProvider'\nexport type {\n  ChildrenType,\n  DataAttribute,\n  EventsType,\n  PlacesType,\n  PositionStrategy,\n  VariantType,\n  WrapperType,\n  ITooltipController as ITooltip,\n  ITooltipWrapper,\n  IPosition,\n  Middleware,\n}\n\nexport { removeStyle } from './utils/handle-style'\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  style,\n  position,\n  isOpen,\n  border,\n  opacity,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipHidden, setTooltipHidden] = useState(hidden)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n      hidden: (value) => {\n        setTooltipHidden(value === null ? hidden : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    setTooltipVariant(variant)\n  }, [variant])\n\n  useEffect(() => {\n    setTooltipOffset(offset)\n  }, [offset])\n\n  useEffect(() => {\n    setTooltipDelayShow(delayShow)\n  }, [delayShow])\n\n  useEffect(() => {\n    setTooltipDelayHide(delayHide)\n  }, [delayHide])\n\n  useEffect(() => {\n    setTooltipFloat(float)\n  }, [float])\n\n  useEffect(() => {\n    setTooltipHidden(hidden)\n  }, [hidden])\n\n  useEffect(() => {\n    setTooltipPositionStrategy(positionStrategy)\n  }, [positionStrategy])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${selector}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return\n    }\n    if (style?.border) {\n      // eslint-disable-next-line no-console\n      console.warn('[react-tooltip] Do not set `style.border`. Use `border` prop instead.')\n    }\n    if (border && !CSS.supports('border', `${border}`)) {\n      // eslint-disable-next-line no-console\n      console.warn(`[react-tooltip] \"${border}\" is not a valid \\`border\\`.`)\n    }\n    if (style?.opacity) {\n      // eslint-disable-next-line no-console\n      console.warn('[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.')\n    }\n    if (opacity && !CSS.supports('opacity', `${opacity}`)) {\n      // eslint-disable-next-line no-console\n      console.warn(`[react-tooltip] \"${opacity}\" is not a valid \\`opacity\\`.`)\n    }\n  }, [])\n\n  /**\n   * content priority: children < render or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    const rendered = render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode\n    renderedContent = rendered ? (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {rendered}\n      </div>\n    ) : null\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    hidden: tooltipHidden,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    closeOnScroll,\n    closeOnResize,\n    style,\n    position,\n    isOpen,\n    border,\n    opacity,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n"],"names":["REACT_TOOLTIP_CORE_STYLES_ID","REACT_TOOLTIP_BASE_STYLES_ID","injectStyle","css","id","type","ref","process","_a","env","REACT_TOOLTIP_DISABLE_CORE_STYLES","_b","REACT_APP_REACT_TOOLTIP_DISABLE_CORE_STYLES","_c","REACT_TOOLTIP_DISABLE_BASE_STYLES","_d","REACT_APP_REACT_TOOLTIP_DISABLE_BASE_STYLES","insertAt","document","getElementById","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","debounce","func","wait","immediate","timeout","args","later","apply","this","setTimeout","clearTimeout","DEFAULT_TOOLTIP_ID","DEFAULT_CONTEXT_DATA","anchorRefs","Set","activeAnchor","current","attach","detach","setActiveAnchor","DEFAULT_CONTEXT_DATA_WRAPPER","getTooltipData","TooltipContext","createContext","useTooltip","tooltipId","useContext","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","isScrollable","node","HTMLElement","SVGElement","getComputedStyle","some","propertyName","value","getPropertyValue","getScrollParent","currentParent","parentElement","scrollingElement","documentElement","computeTooltipPosition","async","elementReference","tooltipReference","tooltipArrowReference","place","offset","offsetValue","strategy","middlewares","Number","flip","shift","padding","border","tooltipStyles","tooltipArrowStyles","middleware","push","arrow","element","computePosition","placement","then","x","y","middlewareData","styles","left","top","arrowX","arrowY","staticSide","right","bottom","split","borderSide","borderBottom","borderRight","borderLeft","borderTop","borderWidth","match","Tooltip","className","classNameArrow","variant","anchorId","anchorSelect","events","openOnClick","positionStrategy","wrapper","WrapperElement","delayShow","delayHide","float","hidden","noArrow","clickable","closeOnEsc","closeOnScroll","closeOnResize","externalStyles","position","afterShow","afterHide","content","contentWrapperRef","isOpen","setIsOpen","opacity","tooltipRef","useRef","tooltipArrowRef","tooltipShowDelayTimerRef","tooltipHideDelayTimerRef","actualPlacement","setActualPlacement","useState","inlineStyles","setInlineStyles","inlineArrowStyles","setInlineArrowStyles","show","setShow","rendered","setRendered","wasShowing","lastFloatPosition","setProviderActiveAnchor","hoveringTooltip","anchorsBySelect","setAnchorsBySelect","mounted","shouldOpenOnClick","includes","handleShow","undefined","handleHideTooltipDelayed","delay","handleShowTooltip","event","target","currentTarget","isConnected","handleHideTooltip","handleTooltipPosition","getBoundingClientRect","width","height","computedStylesData","Object","keys","length","handleMouseMove","mouseEvent","mousePosition","clientX","clientY","handleClickTooltipAnchor","handleClickOutsideAnchors","querySelector","anchor","contains","debouncedHandleShowTooltip","debouncedHandleHideTooltip","elementRefs","forEach","add","anchorById","handleScrollResize","anchorScrollParent","tooltipScrollParent","addEventListener","handleEsc","key","enabledEvents","listener","handleMouseEnterTooltip","handleMouseLeaveTooltip","removeEventListener","selector","documentObserver","MutationObserver","mutationList","newAnchors","mutation","attributeName","getAttribute","removedNodes","call","elements","addedNodes","filter","nodeType","matches","flatMap","querySelectorAll","anchors","observe","body","childList","subtree","attributes","attributeFilter","disconnect","updateTooltipPosition","contentObserver","ResizeObserver","Array","from","canShow","React","role","classNames","coreStyles","coreStyles_show","coreStyles_fixed","coreStyles_clickable","coreStyles_noArrow","TooltipContent","dangerouslySetInnerHTML","__html","html","render","children","tooltipContent","setTooltipContent","tooltipHtml","setTooltipHtml","tooltipPlace","setTooltipPlace","tooltipVariant","setTooltipVariant","tooltipOffset","setTooltipOffset","tooltipDelayShow","setTooltipDelayShow","tooltipDelayHide","setTooltipDelayHide","tooltipFloat","setTooltipFloat","tooltipHidden","setTooltipHidden","tooltipWrapper","setTooltipWrapper","tooltipEvents","setTooltipEvents","tooltipPositionStrategy","setTooltipPositionStrategy","providerActiveAnchor","getDataAttributesFromAnchorElement","getAttributeNames","reduce","acc","name","startsWith","replace","applyAllDataAttributesFromAnchorElement","dataAttributes","handleDataAttributes","parsed","values","handler","entries","console","warn","size","anchorElement","observer","observerConfig","CSS","supports","renderedContent","props","anchorRefMap","setAnchorRefMap","activeAnchorMap","setActiveAnchorMap","refs","oldMap","tooltipRefs","delete","useCallback","context","useMemo","Provider","anchorRef","remove"],"mappings":"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"}